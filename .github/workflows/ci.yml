name: mkdocs-deploy

on:
  push:
    branches:
      - main
  schedule:
      - cron: '0 19 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检查分支
        uses: actions/checkout@v4

      - name: Git config
        run: |
          git config --global user.name "tarenaexit"
          git config --global user.email "weiyanshum@gmail.com"

      - name: Git Pull
        run: git pull

      - name: Install Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requirements
        run: pip3 install requests python-slugify pytz PyYaml
      
      - uses: FugaCloud/s3-sync-action@2.0.0
        with:
          args: --s3-acl private -v -i--links --metadata --hash h 
        env:
          ACCESS_KEY_ID: ${{ secrets.STORAGE_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.STORAGE_SECRET }}
          ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
          BUCKET: ${{ secrets.STORAGE_BUCKET }}
          REGION: 'auto'
          SOURCE_DIR: 'docs/note'
          DEST_DIR: 'note'

      - name: 获取并保存所有 Discussions content+meta 信息
        run: |
          ls -al docs
          python3 script/getAllDiscussions.py -r tarenaexit/mkdocs-merterial-garden -t ${{ secrets.PERSONAL_ACCESS_TOKEN }} -m both
          ls -al docs

      - name: Generate blog posts 
        run: python3 script/discussions2blog.py -i docs/Discussions.txt

      - name: Generate mkdocs posts
        run: python3 script/discussions2mkdocs.py -i docs/Discussions.txt -c nav4dir.yml

      - name: Generate mkdocs special pages
        run: python3 script/discussions4pages.py -i docs/Discussions.txt

      # - name: Commit files
      #   run: |
      #     current="`TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S'`"
      #     message="Add Changes By GitHub Actions: $current (CST/UTC-8)"
      #     echo "$message" > update.log          
      #     git add --all
      #     git commit -a -m "$message" 

      # - name: Generate cache_id
      #   run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      # - name: Push Changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      #     branch: main

      - name: 检测 metadata.old/new 内容是否有变更
        run: |
          if [ -f "docs/metadata.old.txt" ] && [ -f "docs/metadata.new.txt" ]; then
            CONTENT=$(diff docs/metadata.old.txt docs/metadata.new.txt || true)
            echo -e "$CONTENT" > docs/diff.txt
            if [ "$CONTENT" ]; then
              echo -e "提示: 文件内容不一致, 参考 docs/diff.txt 文件."
              echo "DIFF_CONTENT='NOT NULL'" >> $GITHUB_ENV
              mv docs/metadata.new.txt docs/metadata.old.txt
              echo -e "提示: 使用 docs/metadata.new.txt 的内容覆盖 docs/metadata.old.txt."
              current="`TZ=UTC-8 date +'%Y-%m-%d %H:%M:%S'`"
              message="Add Changes By GitHub Actions: $current (CST/UTC-8)"
              git add --all
              git commit -a -m "$message"
            else
              echo -e "提示: CONTENT 内容为空."
              echo "DIFF_CONTENT=" >> $GITHUB_ENV
            fi
          else
            echo -e "提示: 没有比较文件."
            echo "DIFF_CONTENT=" >> $GITHUB_ENV
          fi 

      - name: 执行 Push 提交(当 metadata.old/new 内容不一致时)
        if: env.DIFF_CONTENT != '' 
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          branch: main

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: echo ${{ env.DIFF_CONTENT }}
      - run: pip install -r requirements.txt
        if: env.DIFF_CONTENT != '' || github.ref == 'refs/heads/main'
      - run: mkdocs gh-deploy --force
        if: env.DIFF_CONTENT != '' || github.ref == 'refs/heads/main'
